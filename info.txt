Data Structures and Algorithms

//Sorting Algorithms

1. Bubble Sort
   - Time Complexity: O(n²)
   - Space Complexity: O(1)

2. Selection Sort
   - Time Complexity: O(n²)
   - Space Complexity: O(1)

3. Insertion Sort
   - Time Complexity: O(n²)
   - Space Complexity: O(1)

4. Merge Sort
   - Time Complexity: O(n log n)
   - Space Complexity: O(n)

5. Quick Sort
   - Time Complexity: O(n log n) average, O(n²) worst
   - Space Complexity: O(log n)


6. Heap Sort
   - Time Complexity: O(n log n)
   - Space Complexity: O(1)


7. Counting Sort
   - Time Complexity: O(n + k) where k is range of input
   - Space Complexity: O(k)
   

8. Radix Sort
   - Time Complexity: O(d(n + k)) where d is number of digits
   - Space Complexity: O(n + k)
   - Stable: Yes
   - Description: Sorts numbers by processing individual digits.

Key Characteristics:
- Stable Sort: Maintains relative order of equal elements
- In-place: Uses constant extra space
- Adaptive: Performs better on partially sorted data